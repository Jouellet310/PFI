@model MySpace.Models.UserSubscriptionWrapper

@{ ViewBag.Title = "Subscribe"; }

<h2>Enregistrement de compte</h2>
<hr />
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    @Html.HiddenFor(model => model.User.Id)
    @Html.HiddenFor(model => model.User.CreationDate)
    @Html.HiddenFor(model => model.User.UserTypeId)
    @Html.HiddenFor(model => model.User.Verified)
    @Html.HiddenFor(model => model.User.Blocked)
    @Html.HiddenFor(model => model.User.Avatar)
    @Html.HiddenFor(model => model.User.Accepted)

    <div class="form-horizontal">

        <fieldset class="formField">
            <legend>Identification</legend>
            @Html.EditorFor(model => model.User.FirstName, new { htmlAttributes = new { @class = "form-control", placeholder = @Html.DisplayNameFor(model => model.User.FirstName) } })
            @Html.ValidationMessageFor(model => model.User.FirstName, "", new { @class = "text-danger" })
            <br />
            @Html.EditorFor(model => model.User.LastName, new { htmlAttributes = new { @class = "form-control", placeholder = @Html.DisplayNameFor(model => model.User.LastName) } })
            @Html.ValidationMessageFor(model => model.User.LastName, "", new { @class = "text-danger" })
        </fieldset>

        <fieldset class="formField">
            <legend>@Html.DisplayNameFor(model => model.User.AvatarImageData)</legend>
            @Helper.ImageUploader(Model.User.Id, Model.User.GetAvatarURL(), "AvatarImageData", "~/ImagesData/Loading_icon.gif", "Cliquez pour choisir votre avatar")
            @Html.ValidationMessageFor(model => model.User.AvatarImageData, "", new { @class = "text-danger" })
        </fieldset>

        <fieldset class="formField">
            <legend>@Html.DisplayNameFor(model => model.User.GenderId)</legend>
            @Helper.ListToRadioButtonGroup("User.GenderId", (SelectList)ViewBag.Genders, Model.User.GenderId)
            @Html.ValidationMessageFor(model => model.User.GenderId, "", new { @class = "text-danger" })
        </fieldset>

        <fieldset class="formField">
            <legend>@Html.DisplayNameFor(model => model.User.Email)</legend>
            @Html.EditorFor(model => model.User.Email, new { htmlAttributes = new { @class = "form-control", placeholder = @Html.DisplayNameFor(model => model.User.Email) } })
            @Html.ValidationMessageFor(model => model.User.Email, "", new { @class = "text-danger" })
            <br />
            @Html.EditorFor(model => model.User.ConfirmEmail, new { htmlAttributes = new { @class = "form-control", placeholder = @Html.DisplayNameFor(model => model.User.ConfirmEmail) } })
            @Html.ValidationMessageFor(model => model.User.ConfirmEmail, "", new { @class = "text-danger" })
        </fieldset>


        @{
            SelectListItem artiste = new SelectListItem
            {
                Text = "Artiste",
                Value = "1"
            };
            SelectListItem fan = new SelectListItem
            {
                Text = "Fan",
                Value = "0",
            };

            var accountTypes = new List<SelectListItem>
            {
                artiste,
                fan
            };

            var accountTypeList = new SelectList(accountTypes, fan);
        }

        <fieldset class="formField">
            <legend>Type de compte</legend>
            @Helper.ListToRadioButtonGroup("AccountType", accountTypeList, 0)
        </fieldset>

        <fieldset class="formField">
            <legend>@Html.DisplayNameFor(model => model.User.Password)</legend>
            @Html.EditorFor(model => model.User.Password, new { htmlAttributes = new { @class = "form-control", placeholder = @Html.DisplayNameFor(model => model.User.Password) } })
            @Html.ValidationMessageFor(model => model.User.Password, "", new { @class = "text-danger" })
            <br />
            @Html.EditorFor(model => model.User.ConfirmPassword, new { htmlAttributes = new { @class = "form-control", placeholder = @Html.DisplayNameFor(model => model.User.ConfirmPassword) } })
            @Html.ValidationMessageFor(model => model.User.ConfirmPassword, "", new { @class = "text-danger" })
        </fieldset>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Soumettre" class="btn btn-default" />
            </div>
        </div>
    </div>}

<div>
    @Html.ActionLink("Se connecter...", "Login")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/imageUploader")
    @Scripts.Render("~/bundles/FormUtilities")
}
